   PowerPlusWaterMarkObject1

                                                                OpenLCB Standard

                                                            Firmware Upgrade(title)

                                                   Sep 18, 2015                    PreliminaryProposal      

                                         1 Introduction (Informative)

   This Standard defines a method for using OpenLCB protocols for upgrading the firmware of an OpenLCB
   node.Minimal introductory material, only the stuff that's absolutely needed to understand the Standard.
   This Standard is agnostic to the physical layer.

                                         2 Intended Use (Informative)

   This method is expected to be implemented in common Configuration Tool (CT) software packages. Any
   hardware device that is able to follow the interactions defined here and thereby receive a firmware
   upgrade through Any limitations to the area of use of the Standard.this method will be able to be
   updated using commonly available CT software. This reduces the burden of the manufacturers in that they
   don't need to develop and provide tools and user interface for firmware upgrade capability, as well as
   increases user satisfaction, because the user does not have to acquire and learn to use a new tool for
   each hardware manufacturer, but can use a tool she is already familiar with to update all conforming
   hardware nodes.

   This Standard does not define new protocols, but identifies a specific subset of the OpenLCB protocol
   stack that is necessary for the firmware upgrade to function, and defines the exact sequence of
   operations that are expected to happen during a firmware upgrade.

   The intended use of this subset is to allow manufacturers to supply their hardware with dual firmware,
   consisting of a “bootloader” component with the minimum required support for firmware update, as well as
   a replaceable “production” firmware for full node operation.

                                     3 References and Context (Normative)

   For more information on format and presentation, see:

     * OpenLCB Common Information Technical Note

   For information on OpenLCB message transport and OpenLCB communications, see:

     * OpenLCB Message Network Standard. That Standard also defines the Uninitialized state and the Node
       Initialization Complete message.

   The defined method relies on commands and messages defined in the following standards:

     * Citations to other docs, as needed.

     * OpenLCB Memory Configuration Standard, which defines, among others, the commands “Reset/Reboot”,
       “Enter Bootloader”, “Stream Write”.

     * OpenLCB Stream Transport Draft StandardThis specification is in the context of the following
       OpenLCB-CAN Standards:

     * For more information on format and presentation, see:

     * OpenLCB Common Information Technical Note, which defined how streams are opened, data transferred,
       aborted with error and completed.

                                        4 Message Formats (Normative)

   Quisque sollicitudin tempor bibendum.^1 Donec consectetur condimentum sollicitudin. Sed dignissim velit
   id felis lacinia at eleifend nisi laoreet. This Standard does not define any messages.

                                             5 States (Normative)

   Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus aliquet luctus. A powered-on hardware
   node may be in one of the following two states:

     * Bootloader state. In this state the node supports a writable Memory Space under the number of the
       Firmware Space to receive the firmware upgrade data, as defined in the firmware upgrade interaction.
       The hardware is not expected to perform any of its regular operations. The OpenLCB node shall still
       be standards compliant.

     * Operating state. In this state the node performs its desired function. The node in Operating state
       must not export a writable Memory Space under the number of the Firmware Space.

                                          6 Interactions (Normative)

6.1 Definitions

   There are two nodes involved in the firmware upgrade process:

   The Configuration Tool (CT) is the node with a user interface that is in possession of the new
   manufacturer-supplied firmware data file.

   The Target Node is the node whose firmware is being updated.

6.2 State transitions

   A node may not transition between Bootloader state and Operating state without returning to
   Uninitialized state, as defined by the OpenLCB Message Network standard.

   At power-up a hardware node shall start up in Operating state by default, unless one of the following
   conditions hold:

     * Regular operation is impossible due to the lack of a working firmware. In this case the Target Node
       may, but is not required to, emit a Producer-Consumer Event Report (PCER) message with the
       Well-Known Event ID “Firmware Corrupted” after reaching Initialized state.

     * The user has requested firmware upgrade mode using a hardware switch, if one is available. In this
       case, the Target Node may, but is not required to, emit a PCER message with the Well-Known Event ID
       “Firmware Upgrade Requested by Hardware Switch” after reaching Initialized state.

   To request a Target Node to transition from Bootloader state to Operating state, the Configuration Tool
   shall send a Memory Configuration protocol “Reset/Reboot” command. The Target Node acknowledges the
   completion of the state transition by sending a Node Initialization Complete message.

   To request a Target Node to transition to Bootloader state (from either Bootloader or Operating state),
   a Configuration Tool shall send a Memory Configuration protocol “Enter Bootloader” command. The node
   acknowledges the completion of the state transition, if one was necessary, by sending a Node
   Initialization Complete message.

6.3 Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus aliquet luctus. Data Transfer

   The Configuration Tool shall transfer the manufacturer-supplied firmware data by performing a Memory
   Configuration protocol Stream Write to the memory space of Firmware Space, with a starting offset of
   zero (0). The stream data bytes are the unmodified, uninterpreted, exact sequence of the
   manufacturer-supplied firmware upgrade file.

   If the node being upgraded encounters an error, it may abort the data transfer by aborting the stream
   with an error code. If the transfer is aborted, the node is required to stay in Bootloader state. If the
   CT re-tries the transfer, it shall do so from offset zero again. If the Target Node aborted the
   transfer, it is not required to be able to return to Operating state until the transfer is re-tried and
   successfully completed; however, it is required to be able to boot after a power cycle and return to
   Bootloader state, able to accept a new firmware upgrade attempt.

   The Target Node being upgraded may, but is not required to, throttle the incoming data on the stream by
   means allowed by the Stream protocol.

   After transferring all the bytes in the manufacturer-supplied firmware data file, the CT shall wait
   until it would be allowed to send more data according to the Stream protocol. Then the CT shall close
   the stream as defined in the Stream protocol. Afterwards the CT may, but is not required to, initiate a
   transition to Operating state.

6.4 Full sequence of firmware upgrade

   For a more detailed description of the messages transferred, please see the Firmware Upgrade Technical
   Note.

    1. The CT sends a Memory Configuration datagram command “Enter Bootloader”. Note that a Datagram
       Received OK reply message is not always returned to this request.

    2. The CT waits for a Node Initialization Complete message from the Target Node.

    3. The CT performs the Data Transfer.

    4. The CT resets the Target Node using a Memory Configuration datagram command “Reset”.

                                    7 Section TitleAllocations (Normative)

   This section describes the numerical values that were referenced in earlier sections and are not defined
   in their respective standards.

7.1 Subsection TitleMemory Space numbers

    0xEF              Firmware Space                                                                        

7.2 Error Codes

   The Target Nodes may, but are not required to, use the following error codes to denote specific
   conditions relating to the firmware upgrade process.

    0x2088          Temporary error, Transfer error.                                                        
                    The firmware written has failed checksum.                                               

    ..0x1088.       Permanent error, invalid arguments.                                                     
                    The firmware data is incompatible with this hardware node.                              

    0x1089          Permanent error, invalid arguments.                                                     
                    The firmware data is invalid or corrupted.                                              

7.3 Well-Known Event IDs

   01.01.00.00.00.00.06.01 Firmware Corrupted

   01.01.00.00.00.00.06.02 Firmware Upgrade Requested by Hardware Switch

  Sub-subsection Title

   Praesent gravida pulvinar vehicula. Vivamus eu nisl eget sem rutrum suscipit id a magna. Integer id ante
   odio.

     * Lorem ipsum dolor sit amet, consectetur adipiscing elit.

   Sed consectetur, ipsum et egestas accumsan, felis erat ornare mauris, sit amet suscipit ante orci sed
   massa.Sub-subsection Title

   Praesent gravida pulvinar vehicula. Vivamus eu nisl eget sem rutrum suscipit id a magna. Integer id ante
   odio.

     * Lorem ipsum dolor sit amet, consectetur adipiscing elit.

   Sed consectetur, ipsum et egestas accumsan, felis erat ornare mauris, sit amet suscipit ante orci sed
   massa.

                                                Section Title

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

                                                Section Title

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Quisque sollicitudin tempor bibendum. Donec consectetur condimentum sollicitudin. Sed dignissim velit id
   felis lacinia at eleifend nisi laoreet. Vivamus tristique porta ornare. Vivamus feugiat dolor id lectus
   aliquet luctus.

   Table of Contents

   1 Introduction (Informative) 1

   2 Intended Use (Informative) 1

   3 References and Context (Normative) 1

   4 Message Formats (Normative) 2

   5 States (Normative) 2

   6 Interactions (Normative) 2

   6.1 Definitions 2

   6.2 State transitions 2

   6.3 Data Transfer 3

   6.4 Full sequence of firmware upgrade 3

   7 Allocations (Normative) 3

   7.1 Memory Space numbers 3

   7.2 Error Codes 3

   1See the “Common Information” OpenLCB Technical Note for detailed conventions on bit and byte numbering.
   Briefly, the least significant bit of a field is numbered with zero in OpenLCB descriptions, but note
   that other technologies may use other conventions.

   Copyright 2013-XX5. All rights reserved. See http://openlcb.org/Licensing.html for license terms.  Page
   1 of 3 - Sep 18, 2015
