   PowerPlusWaterMarkObject1

                                                                   OpenLCB Standard

                                                                 Memory Configuration

                                                      Feb 17, 2015                     In Review            

                                         1 Introduction (Informative)

   This document defines a protocol for configuring OpenLCB nodes by directly accessing their configuration
   memory.

                                         2 Intended Use (Informative)

   Intended to be used to configure self-contained nodes over their OpenLCB links.

                                     3 References and Context (Normative)

   This Standard is in the context of the following OpenLCB Standards:

     * OpenLCB Configuration Description Information (CDI), which defines fixed information to allow a
       Configuration Tool (CT) to configure a node.

     * OpenLCB Datagram Transport Protocol, which defines the protocol for transporting 0-72 byte datagrams
       from node to node.

     * OpenLCB Message Network, which defines message interchange for OpenLCB, specifically how this
       protocol appears in the Protocol Support Reply message and Error Codes.

     * The OpenLCB Stream Transport Standard, which defines the protocol for transporting data from node to
       node.

                                            4 Protocol (Normative)

4.1 Address Space Size

   Configuration memory addresses are 32 bits. The addressable quantity is the byte. There are 255 unique
   address spaces, which are specified using an address space selectors.

4.2 Address Space Selection

   Of the 255 unique address spaces, those that follow are required to be implemented by any node that
   implements this Standard (these may or may not have content on a particular node); the following address
   space numbers can only be used for the specified purpose, and if the corresponding information is
   available, it must be accessible by these address space selectors (in addition to any others the
   designer might provide):

     * (space=0xFF, control bits=0b0000011) Configuration definition – A read-only space containing the
       Configuration Description Information for this node, if any.

     * (space=0xFE, control bits=0b00000010) All memory – This special space provides access to all memory
       in the device, where “all” is defined by the designer.

     * (space=0xFD, control bits=0b00000001) Configuration – A writable basic configuration space, with the
       structure of the 32-bit space defined by the designer.

   These three spaces, inclusive, can (but do not have to) be addressed without an extra byte in the
   datagram using control bits in the flag byte (byte 1). All others must be specified as a byte value in
   byte 6 of the datagram payload (see Section 4.3).

4.3 Message Formats

   The following table shows available configuration message formats. All other formats are reserved. Note
   that Byte 6 is optional. If Byte 6 is not used, it is not present in the message, and the remaining
   bytes directly follow Byte 5 with no Byte 6 padding.

  4.3.1 Error Handling

   An unknown command in byte 1 shall return a datagram rejected reply with an error-code as defined in the
   OpenLCB Message Network Standard.

   !!br0ken!!

  4.3.2 Read Command

    Byte 0   Byte 1                 Byte 2-5           Byte 6          Byte 7/6                             
                                                       (optional)      

    0x20     0x40 Space in byte 6   Starting Address   Address Space        Read Count (1 – 64 bytes)       
             0x41 Space 0xFD                                                                                
             0x42 Space 0xFE                                           Upper bit reserved, must be ignored  
             0x43 Space 0xFF        

  4.3.3 Read Reply

    Byte 0  Byte 1                Byte 2-5          Byte 6         Remaining Bytes                          
                                                    (optional)                                              
                                                                   (in network order, top to bottom)        

    0x20    OK status:            Starting Address  Address Space            Data (1 – 64 bytes)            
                                  
            0x50 Space in byte 6  
            0x51 Space 0xFD       
            0x52 Space 0xFE       
            0x53 Space 0xFF       

            Failure status:                                          * Error Code (two bytes)               
                                                                                                            
            0x58 Space in byte 6                                     * optional zero-terminated message     
            0x59 Space 0xFD                                            string (0 – 63 bytes)                
            0x5A Space 0xFE       
            0x5B Space 0xFF       

  4.3.4 Read Stream Command

    Byte 0   Byte 1                 Bytes 2-5          Byte 6         Remaining Bytes                       
                                                       (optional)                                           
                                                                      (in network order, top to bottom)     

    0x20     0x60 Space in byte 6   Starting Address   Address Space    * Read Count (4 bytes)              
             0x61 Space 0xFD                                                                                
             0x62 Space 0xFE                                            * Destination Stream ID (1 byte)    
             0x63 Space 0xFF        

  4.3.5 Read Stream Reply

    Byte 0  Byte 1                Bytes 2-5         Byte 6         Remaining Bytes                          
                                                    (optional)                                              
                                                                   (in network order, top to bottom)        

    0x20    OK status:            Starting Address  Address Space    * Read Count (4 bytes)                 
                                                                                                            
            0x70 Space in byte 6                                     * Source Stream ID (1 byte)            
            0x71 Space 0xFD       
            0x72 Space 0xFE       
            0x73 Space 0xFF       

            Failure status:                                          * Error Code (2 bytes)                 
                                                                                                            
            0x78 Space in byte 6                                     * optional zero-terminated message     
            0x79 Space 0xFD                                            string (0 – 63 bytes)                
            0x7A Space 0xFE       
            0x7BSpace 0xFF        

  4.3.6 Write Command

    Byte 0       Byte 1                     Byte 2-5           Byte 6              Remaining Bytes          
                                                               (optional)          

    0x20         0x00 Space in byte 6       Starting Address     Address Space       Data (1 – 64 bytes)    
                 0x01 Space 0xFD            
                 0x02 Space 0xFE            
                 0x03 Space 0xFF            

  4.3.7 Write Reply

    Byte 0  Byte 1                Byte 2-5          Byte 6         Remaining Bytes                          
                                                    (optional)                                              
                                                                   (in network order, top to bottom)        

    0x20    OK status:            Starting Address  Address Space                  (None)                   
                                  
            0x10 Space in byte 6  
            0x11 Space 0xFD       
            0x12 Space 0xFE       
            0x13 Space 0xFF       

            Failure status:                                          * Error Code (two bytes)               
                                                                                                            
            0x18 Space in byte 6                                     * optional zero-terminated message     
            0x19 Space 0xFD                                            string (0 – 63 bytes)                
            0x1A Space 0xFE       
            0x1B Space 0xFF       

  4.3.8 Write Under Mask Command

    Byte 0      Byte 1                    Byte 2-5           Byte 6             Remainder                   
                                                             (optional)         

    0x20        0x08 Space in byte 6      Starting Address     Address Space     Data pairs (2-64 bytes)    
                0x09 Space 0xFD           
                0x0A Space 0xFE           
                0x0B Space 0xFF           

   The data pairs are (Mask, Data) where each of Mask and Data are single bytes. Bits in Data where the
   corresponding bit in Mask is a 1 will be written to the memory location. Bits in memory where the
   corresponding bit in Mask is a 0 will be left unchanged. The first data pair refers to memory at the
   Starting Address. Each following data pair refers to a successive byte in memory.

  4.3.9 Write Stream Command

    Byte 0      Byte 1                   Byte 2-5           Byte 6            Remainder                     
                                                            (optional)        

    0x20        0x20 Space in byte 6     Starting Address    Address Space     Source Stream ID (1 byte)    
                0x21 Space 0xFD          
                0x22 Space 0xFE          
                0x23 Space 0xFF          

  4.3.10 Write Stream Reply

    Byte 0  Byte 1                Byte 2-5          Byte 6         Remaining Bytes                          
                                                    (optional)                                              
                                                                   (in network order, top to bottom)        

    0x20    OK status:            Starting Address  Address Space                  (None)                   
                                  
            0x30 Space in byte 6  
            0x31 Space 0xFD       
            0x32 Space 0xFE       
            0x33 Space 0xFF       

            Failure status:                                          * Error Code (two bytes)               
                                                                                                            
            0x38 Space in byte 6                                     * optional zero-terminated message     
            0x39 Space 0xFD                                            string (0 – 63 bytes)                
            0x3A Space 0xFE       
            0x3B Space 0xFF       

  4.3.11 Get Configuration Options Command

    Byte 0       Byte 1                                                                                     

    0x20         0x80                                                                                       

  4.3.12 Get Configuration Reply

    Byte 0  Byte 1  Byte 2-3            Byte 4         Byte 5             Byte 6               Remainder    
                                                                          (Optional)           (Optional)   

    0x20    0x82    Available Commands  Write Lengths  Highest Address    Lowest Address       Name String  
                                                       Space              Space                

  4.3.13 Get Address Space Information Command

    Byte 0       Byte 1        Byte 2                                                                       

    0x20         0x84          Address Space                                                                

  4.3.14 Get Address Space Information Reply

    Byte 0      Byte 1     Byte 2         Byte 3-6            Byte 7     Byte 8-11          Byte 12         

    0x20        0x86       Address Space   Highest Address      Flags     Lowest Address     Description    

  4.3.15 Freeze Command

    Byte 0       Byte 1        Byte 2                                                                       

    0x20         0xA1          Address Space                                                                

  4.3.16 Unfreeze Command

    Byte 0       Byte 1        Byte 2                                                                       

    0x20         0xA0          Address Space                                                                

  4.3.17 Lock/Reserve Command

    Byte 0       Byte 1        Byte 2-7                                                                     

    0x20         0x88                                       Reserving Node ID                               

  4.3.18 Lock/Reserve Reply

    Byte 0       Byte 1        Byte 2-7                                                                     

    0x20         0x8A                                       Reserved Node ID                                

  4.3.19 Get Unique ID Command

    Byte 0       Byte 1       Byte 2                                                                        

    0x20         0x8C         Number requested (1-8, 3 bits); upper bits reserved and must be ignored       

  4.3.20 Get Unique ID Reply

    Byte 0       Byte 1        Remainder                                                                    

    0x20         0x8D          1-8 requested EventIDs, a total of 8-64 bytes                                

  4.3.21 Indicate Command

    Byte 0       Byte 1                                                                                     

    0x20         0xA3 on                                                                                    
                 0xA2 off                                                                                   

  4.3.22 Update Complete Command

    Byte 0       Byte 1                                                                                     

    0x20         0xA8                                                                                       

  4.3.23 Reset/Reboot Command

    Byte 0       Byte 1                                                                                     

    0x20         0xA9                                                                                       

  4.3.24 Reinitialize/Factory Reset Command

    Byte 0       Byte 1        Byte 2-7                                                                     

    0x20         0xAA                                            Node ID                                    

4.4 Operations

  4.4.1 Read, Read-Reply

   In reply to the datagram containing a Read command, the receiving node shall set the Reply Pending bit
   in the Datagram Received OK message. The receiving node may, but is not required to, include a specific
   timeout interval in the Datagram Received OK message.

   If the interval is provided and has elapsed without a Read Reply message being returned, the node
   requesting the Read operation may, but is not required to, repeat the request.

   Attempts to read from an invalid location, either outside the available address range in an valid
   address space, or from an invalid address space, still require a returning a Read Reply datagram with an
   data length of zero.

   In general, a read reply may provide less than the requested data, but always at least one byte if it's
   a valid read. The maximum read request is 64 bytes when reading via datagrams. When reading via streams,
   any length up to 0xFF,FF,FF,FF (4GB-1) can be requested; a length of 0x0 means “read forever” or until
   the end of the address space.

   Reading at least one byte, but less than the requested amount, due to the length of the address space is
   not considered an error.

   If the full number of bytes cannot be read for any reason other than the size of the address space, or
   if no bytes can be read, the Read Reply shall have the Fail bit set and include an error code instead of
   the requested data.

  4.4.2 Read Stream, Read Stream Reply

   Very similar to Read, except that a stream is created to carry the read information back to the
   requesting node. The stream must be established before the Read Reply datagram is sent, so that error
   codes can be returned via the Read Reply in the stream initialization fails.

   The four bytes of read length are sent most-significant byte first.

  4.4.3 Write, Write Reply

   If the write operation can be done immediately and succeeds, only the Datagram Received OK message reply
   to the Write Command datagram is returned. The Reply Pending bit is not set in the Datagram Received OK
   reply.

   If the write operation takes time, or fails immediately, the Datagram Received OK message reply to the
   Write Command datagram shall carry the Reply Pending bit set. The receiving node may, but is not
   required to, include a specific timeout interval in the Datagram Received OK message. This is followed
   later by the receiving node sending a Write Reply datagram with either OK or Fail set. If Fail is set,
   the error code shall be included. The optional message string may be, but is not required to be,
   included.

   If a timeout interval was provided and has elapsed without a Write Reply message being returned, the
   node requesting the Write operation may, but is not required to, repeat the request.

  4.4.4 Write Stream, Write Stream Reply

   Write Stream is followed by a stream initialization using the specified Stream ID. Once that completes,
   the Write Reply can be returned.

  4.4.5 Get Configuration Options Reply

   To make it possible to make simple/cheap nodes, not every configuration operation & option needs to be
   provided. The reply to “Get Configuration Options” provides information that a configuring device can
   use to control how it communicates with the node so that it only uses available modes.

     * Available operations mask (2 bytes, bit coded): Indicate which operations are available so the using
       software can know whether convenience operations (which are not possible on some hardware) are
       available.

          * 0x8000 Write under mask supported

          * 0x4000 Unaligned reads supported. If not set, reads have to start on an address with the low
            bits, as given by the data size, all zero. For example a 4-byte write must have the low two
            address bits zero.

          * 0x2000 Unaligned writes supported. If not set, reads have to start on an address with the low
            bits, as given by the data size, all zero. For example a 4-byte write must have the low two
            address bits zero.

          * 0x0800 Read from address space 0xFC available (this is the manufacturer part of Abbreviated
            CDI)

          * 0x0400 Read from address space 0xFB available (this is the user-entered part of Abbreviated
            CDI)

          * 0x0200 Write to address space 0xFB available (this is the user-entered part of Abbreviated CDI)

          * Others reserved, must be ignored on receipt and sent as zero.

     * Write lengths supported (One byte, bit coded): (provided for devices that can only write certain
       sizes to memory) (at least one bit must be set)

          * 0x80 1 byte write

          * 0x40 2 byte write

          * 0x20 4 byte writes

          * 0x10 64 byte writes (full datagram, but not 63 bytes or arbitrary length, just exactly 64)

          * 0x02 arbitrary writes of any length OK

          * 0x01 stream writes supported (stream support will identify buffer size)

          * Others reserved, must be ignored on receipt and sent as zero.

     * Highest Address Space (byte): Highest number space available. Not all up to that need be available,
       but sparse allocation will slow down the process as “Get Address Space Information” is needed to
       determine whether they are present.

     * Lowest Address spaces (byte): Lowest number space available. Note that spaces 0xFD, 0xFE and 0xFF
       are assumed to be included even if the low space ↔ high space range doesn't include them. (also
       0xFC, 0xFB of Abbreviated Default CDI if bits indicate they're available)

   A node that only has the high spaces could have Highest Address Space = 255, Lowest Address Space = 253
   or 251.

   A node that has additional low address spaces, e.g. to make more memory available with a 28-bit address,
   could have Highest Address Space = 127, Lowest Address Space = 0 and leave the top spaces assumed.

  4.4.6 Get Address Space Information Reply

   To ease automated access, a configuring node can inquire about the address spaces in the
   being-configured node. Whether or not the address space is present, a reply is required.

     * Present: This is carried in the lowest bit of the command byte, just below the reply bit

          * 0x01 == 1: Present. == 0 not present.

     * Space ID – provided to identify request this reply is in response to

     * Highest Address (4 bytes)

     * Flags (byte) – (Alignment and size were going to be here but were made global above); Read-Only is
       LSB, can write if 0, can only read if 1; Non-zero lowest address is 2nd-lowest bit, low address is
       zero if 0, is non-zero and specified in next four bytes if 1

     * Lowest Address (4 bytes) – optional, omit if zero, as that will let reply fit in single CAN frame;
       if present, “non-zero lowest address” bit in prior byte must be 1.

     * Description (variable length) – optional null-terminated string giving the user-readable name of
       this space

  4.4.7 Lock/Reserve and Freeze/Unfreeze

   An OpenLCB node can, in general, be configured while the network and even the node itself is operating.

   Code can be simplified by disabling operation of a node while it's being configured, so that there's no
   concern about it trying to react to transient incomplete information. The Freeze/Unfreeze command, if
   supported, can be used to tell a node that it should “freeze” operation, ignoring inputs, while the
   configuration is being updated. A reset of the node releases the freeze option, if set.

   Although nodes can be configured by multiple other nodes, this can also lead to inconsistencies. The
   optional Lock/Release command can be used to avoid this. At the start of configuration, a configuring
   node sends a Lock message with its NodeID. If no node has locked this node, indicated by zero content in
   the lock memory, the incoming NodeID is placed in the lock memory. If a node has locked this node, the
   non-zero NodeID in the lock memory is not changed. In either case, the content of the lock memory is
   returned in the reply. This acts as a test&set operation, and informs the requesting node whether it
   successfully reserved the node. To release the node, repeat the lock operation with a zero NodeID. The
   lock memory is set to zero when the node is reset. Note that this is a voluntary protocol in the
   configuring nodes only; the node being configured does not change it's response to configuration
   operations when locked or unlocked.

  4.4.8 Get Unique EventID

   Nodes maintain a list of unique EventIDs for use in configuration. These are allocated based on the
   node's unique NodeID. This command allows a configuration tool to get new unique EventIDs from the
   node's pool, for example to interact with the Blue/Gold configuration process. Each request must provide
   a different EventID, without repeat, even through node resets and factory resets.

  4.4.9 Update Complete/Reset/Reboot/Reinitialize

   This is a collection of three operations, distinguished by what are normally the flag bits.

   The configuration protocol does not specify the meaning of the transferred data. In particular, it
   doesn't specify when new configuration information takes effect. Depending on how the node is
   constructed, this might be immediately upon transfer (although this raises issues of write boundaries),
   or when an entire sequence of transfers is complete. “Update Complete” is the command that indicates
   that a series of configuration writes is consistent and complete, and the node can put it into effect.
   Nodes do not have to require this operation, but receiving it must be permitted. Configuration tools
   should send it at the end of operations. Nodes may, but are not required to, reset after sending the
   reply to this message.

   The “Reboot/Reset” command is meant to reinitialize a node, equivalent to powering it up. Nodes should
   finish any pending operations, e.g. non-volatile memory writes, before doing the initialization. It's
   expected that the datagram reply will be sent before the reset, but this might not be entirely reliable.
   Configuration tools should not count on the reply. The configuring node will receive a “Node
   Initialization Complete” when the node is back up. This operation must not reset any configuration
   information to default contents.

   “Reinitialize/Factory Reset” is similar, but includes restoring the node's configuration as if factory
   reset. (This may require creating new unique EventIDs, see other note) This is a heavy-weight operation
   which may require some form of interlock, e.g. the user pressing a button, to prevent inadvertent data
   loss. As a small safety precaution, the NodeID of the note being reset is redundantly carried in the
   data part of the datagram.

  4.4.10 Indicate

   (This is likely to move to a separate protocol; note that “indicate” and “ident” are completely
   different things, with “ident” in a separate protocol already)

   This command tells the board to somehow identify itself to the user, for example by flashing a LED or
   operating it's outputs. This allows the user to be absolutely sure that he's configuring the correct
   board. “Start” (bit 0 = 1) means that the board should start indicating, and “Stop” (bit 0 = 0) means
   that the board should stop indicating. The data portion carries information that lets the board know
   what kind of indication to do. It's not always appropriate to operate outputs if they're e.g. driving
   large mechanical systems like doors.

   Table of Contents

   1 Introduction (Informative) 1

   2 Intended Use (Informative) 1

   3 References and Context (Normative) 1

   4 Protocol (Normative) 1

   4.1 Address Space Size 1

   4.2 Address Space Selection 2

   4.3 Message Formats 2

   4.3.1 Error Handling 2

   4.3.2 Read Command 2

   4.3.3 Read Reply 3

   4.3.4 Read Stream Command 3

   4.3.5 Read Stream Reply 3

   4.3.6 Write Command 4

   4.3.7 Write Reply 4

   4.3.8 Write Under Mask Command 4

   4.3.9 Write Stream Command 4

   4.3.10 Write Stream Reply 5

   4.3.11 Get Configuration Options Command 5

   4.3.12 Get Configuration Reply 5

   4.3.13 Get Address Space Information Command 5

   4.3.14 Get Address Space Information Reply 5

   4.3.15 Freeze Command 6

   4.3.16 Unfreeze Command 6

   4.3.17 Lock/Reserve Command 6

   4.3.18 Lock/Reserve Reply 6

   4.3.19 Get Unique ID Command 6

   4.3.20 Get Unique ID Reply 6

   4.3.21 Indicate Command 6

   4.3.22 Update Complete Command 6

   4.3.23 Reset/Reboot Command 7

   4.3.24 Reinitialize/Factory Reset Command 7

   4.4 Operations 7

   4.4.1 Read, Read-Reply 7

   4.4.2 Read Stream, Read Stream Reply 7

   4.4.3 Write, Write Reply 7

   4.4.4 Write Stream, Write Stream Reply 8

   4.4.5 Get Configuration Options Reply 8

   4.4.6 Get Address Space Information Reply 9

   4.4.7 Lock/Reserve and Freeze/Unfreeze 9

   4.4.8 Get Unique EventID 10

   4.4.9 Update Complete/Reset/Reboot/Reinitialize 10

   4.4.10 Indicate 10

   Copyright 2012-2015. All rights reserved. See http://openlcb.org/Licensing.html for license terms.  Page
   1 of 11 - Feb 17, 2015
